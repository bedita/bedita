{
	"info": {
		"_postman_id": "13af6637-6ab9-4f7c-9d43-3f76ef92b77e",
		"name": "BE4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Auth & Signup",
			"item": [
				{
					"name": "Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    responseJSON = JSON.parse(responseBody);",
									"    if (responseJSON.meta) {",
									"        if (responseJSON.meta.jwt) {",
									"            postman.setEnvironmentVariable(\"jwt\", responseJSON.meta.jwt);",
									"        }",
									"        if (responseJSON.meta.renew) {",
									"            postman.setEnvironmentVariable(\"renew\", responseJSON.meta.renew);",
									"        }",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"{{username}}\",\n\t\"password\": \"{{password}}\"\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/auth",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "Perform authentication using application/json content type"
					},
					"response": []
				},
				{
					"name": "Auth OTP  request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "80598f88-7a14-4de1-aa31-11f76f69a952",
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    responseJSON = JSON.parse(responseBody);",
									"    if (responseJSON.meta) {",
									"        if (responseJSON.meta.authorization_code) {",
									"            postman.setEnvironmentVariable(\"authorizationCode\", responseJSON.meta.authorization_code);",
									"        }",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"{{username}}\",\n    \"grant_type\": \"otp_request\"\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/auth",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "Perform authentication using application/json content type"
					},
					"response": []
				},
				{
					"name": "Auth OTP with tokens",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    responseJSON = JSON.parse(responseBody);",
									"    if (responseJSON.meta) {",
									"        if (responseJSON.meta.jwt) {",
									"            postman.setEnvironmentVariable(\"jwt\", responseJSON.meta.jwt);",
									"        }",
									"        if (responseJSON.meta.renew) {",
									"            postman.setEnvironmentVariable(\"renew\", responseJSON.meta.renew);",
									"        }",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"{{username}}\",\n\t\"authorization_code\": \"{{authorizationCode}}\",\n\t\"token\": \"{{token}}\",\n\t\"grant_type\": \"otp\"\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/auth",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth ext auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody);",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    if (responseJSON.meta) {",
									"        if (responseJSON.meta.jwt) {",
									"            postman.setEnvironmentVariable(\"jwt\", responseJSON.meta.jwt);",
									"        }",
									"        if (responseJSON.meta.renew) {",
									"            postman.setEnvironmentVariable(\"renew\", responseJSON.meta.renew);",
									"        }",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"{{username}}\",\n\t\"password\": \"{{password}}\"\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/auth",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "Perform authentication using application/json content type"
					},
					"response": []
				},
				{
					"name": "Auth renew",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f7e7f2d-ab46-4a52-b18b-b296a0e9b0b4",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody);",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    if (responseJSON.meta) {",
									"        if (responseJSON.meta.jwt) {",
									"            postman.setEnvironmentVariable(\"jwt\", responseJSON.meta.jwt);",
									"        }",
									"        if (responseJSON.meta.renew) {",
									"            postman.setEnvironmentVariable(\"renew\", responseJSON.meta.renew);",
									"        }",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{renew}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/auth",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "Perform authentication using application/json content type"
					},
					"response": []
				},
				{
					"name": "Auth (form-data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody);",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    if (responseJSON.meta) {",
									"        if (responseJSON.meta.jwt) {",
									"            postman.setEnvironmentVariable(\"jwt\", responseJSON.meta.jwt);",
									"        }",
									"        if (responseJSON.meta.renew) {",
									"            postman.setEnvironmentVariable(\"renew\", responseJSON.meta.renew);",
									"        }",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/auth",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "Authentication using form-data"
					},
					"response": []
				},
				{
					"name": "Signup user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 202\"] = responseCode.code === 202;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\").startsWith('application/json');"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"johannadoe\",\n    \"password\": \"j0h4nn4d0e\",\n    \"email\": \"johannadoe@nowhere.xx\",\n\t\"activation_url\": \"http://myactivationsys.xx?dum=my\",\n\t\"redirect_url\": \"app://xx?dum=my\"\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/signup",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"signup"
							]
						},
						"description": "Create new User"
					},
					"response": []
				},
				{
					"name": "Signup ext auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 202\"] = responseCode.code === 202;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\").startsWith('application/json');"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"name@email.com\",\n    \"email\": \"name@email.com\",\n    \"name\": \"Name\",\n    \"surname\": \"Surname\",\n\t\"auth_provider\": \"some-provider\",\n\t\"provider_username\": \"acdbrt90780364\",\n\t\"provider_userdata\": {\n\t\t\"headline\": \"Chief Technology Officer, Startup LTD\",\n    \t\"id\": \"acdbrt90780364\",\n\t}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/signup",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"signup"
							]
						},
						"description": "Create new User"
					},
					"response": []
				},
				{
					"name": "Signup user activation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var uuid = postman.getEnvironmentVariable(\"uuid\");",
									"if (uuid) {",
									"    tests[\"Status code is 204\"] = responseCode.code === 204;",
									"    tests[\"Body matches string\"] = responseBody === \"\";",
									"} else {",
									"    tests[\"Skip test - empty apiKey|uuid\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"uuid\": \"{{uuid}}\"\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/signup/activation",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"signup",
								"activation"
							]
						},
						"description": "Signup user activation"
					},
					"response": []
				},
				{
					"name": "Credentials change request",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var profileEmail = postman.getEnvironmentVariable(\"profileEmail\");",
									"if (profileEmail) {",
									"    tests[\"Status code is 204\"] = responseCode.code === 204;",
									"    tests[\"Body matches string\"] = responseBody === \"\";",
									"} else {",
									"    tests[\"Skip test - empty profileEmail\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"contact\": \"{{profileEmail}}\",\n\t\"change_url\": \"http://example.com/change\"\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/auth/change",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"auth",
								"change"
							]
						},
						"description": "Perform authentication using application/json content type"
					},
					"response": []
				},
				{
					"name": "Credentials change",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var uuid = postman.getEnvironmentVariable(\"uuid\");",
									"if (uuid) {",
									"    var responseJSON;",
									"    try {",
									"        responseJSON = JSON.parse(responseBody);",
									"        tests[\"Status code is 200\"] = responseCode.code === 200;",
									"        tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"        if (responseJSON.meta) {",
									"            if (responseJSON.meta.jwt) {",
									"                postman.setEnvironmentVariable(\"jwt\", responseJSON.meta.jwt);",
									"            }",
									"            if (responseJSON.meta.renew) {",
									"                postman.setEnvironmentVariable(\"renew\", responseJSON.meta.renew);",
									"            }",
									"        }",
									"    } catch (e) {",
									"        tests[\"Error in parsing response\"] = e;",
									"    }",
									"} else {",
									"    tests[\"Skip test - empty apiKey|uuid\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"uuid\": \"{{uuid}}\",\n    \"password\": \"a-brand-new password\",\n    \"login\": true\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/auth/change",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"auth",
								"change"
							]
						},
						"description": "Perform actual credential change using secret hash"
					},
					"response": []
				},
				{
					"name": "GET Auth user data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "360552ee-8331-4935-8676-7bce9e483d60",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Status equals 200\"] = true;",
									"} else if (responseCode.code === 404) {",
									"    tests[\"Status code is 404\"] = true;",
									"}",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/auth/user",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"auth",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify auth user data",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Gustavo\"\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/auth/user",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"auth",
								"user"
							]
						}
					},
					"response": []
				}
			],
			"description": "Authorization & Signup",
			"protocolProfileBehavior": {}
		},
		{
			"name": "2. Home & Status",
			"item": [
				{
					"name": "GET home",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5215bce-e8b3-4172-94dd-33d6fb8e21ac",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/home",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"home"
							]
						},
						"description": "Home endpoint"
					},
					"response": []
				},
				{
					"name": "GET home (no auth)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5215bce-e8b3-4172-94dd-33d6fb8e21ac",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/home",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"home"
							]
						},
						"description": "Home endpoint"
					},
					"response": []
				},
				{
					"name": "GET config",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/config",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"config"
							]
						},
						"description": "Config endpoint"
					},
					"response": []
				},
				{
					"name": "GET status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/status/",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"status",
								""
							]
						},
						"description": "Status endpoint"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "3. Model",
			"item": [
				{
					"name": "3.1 Object Types",
					"item": [
						{
							"name": "GET object_types",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/object_types",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"object_types"
									]
								},
								"description": "GET object_types"
							},
							"response": []
						},
						{
							"name": "Create object_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
											"if (responseCode.code === 201) {",
											"    try {",
											"        var responseJSON = JSON.parse(responseBody);",
											"        if (responseJSON && responseJSON.data) {",
											"            if (responseJSON.data.id) {",
											"                postman.setEnvironmentVariable(\"objectTypeId\", responseJSON.data.id);",
											"            }",
											"            if (responseJSON.data.attributes && responseJSON.data.attributes.name) {",
											"                postman.setEnvironmentVariable(\"objectTypeName\", responseJSON.data.attributes.name);",
											"            }",
											"        }",
											"    } catch (e) {",
											"        tests[\"Error in parsing response\"] = e;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"object_types\",\n        \"attributes\": {\n            \"name\": \"cats\",\n            \"singular\": \"cat\",\n            \"description\": \"This is a cat\",\n            \"table\": \"BEdita/Core.Objects\",\n            \"parent_name\": \"objects\",\n            \"is_abstract\": false\n        }\n    }\n}",
									"options": {}
								},
								"url": {
									"raw": "{{be4Url}}/model/object_types",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"object_types"
									]
								},
								"description": "POST ADD object_types"
							},
							"response": []
						},
						{
							"name": "GET single object_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if (responseCode.code === 200) {",
											"    tests[\"Status equals 200\"] = true;",
											"} else if (responseCode.code === 404) {",
											"    tests[\"Status code is 404\"] = true;",
											"}",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/object_types/{{objectTypeName}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"object_types",
										"{{objectTypeName}}"
									]
								},
								"description": "GET object_type by object_type_id"
							},
							"response": []
						},
						{
							"name": "Modify object_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"{{objectTypeId}}\",\n        \"type\": \"object_types\",\n        \"attributes\": {\n            \"description\": \"another dummy description\"\n        }\n    }\n}",
									"options": {}
								},
								"url": {
									"raw": "{{be4Url}}/model/object_types/{{objectTypeId}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"object_types",
										"{{objectTypeId}}"
									]
								},
								"description": "PATCH object_type"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "3.2 Property Types",
					"item": [
						{
							"name": "Create property type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ab287fef-941e-4601-a751-a68e1c38c8f6",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
											"if (responseCode.code === 201) {",
											"    try {",
											"        var responseJSON = JSON.parse(responseBody);",
											"        if (responseJSON && responseJSON.data && responseJSON.data.id) {",
											"            postman.setEnvironmentVariable(\"propertyTypeId\", responseJSON.data.id);",
											"        }",
											"    } catch (e) {",
											"        tests[\"Error in parsing response\"] = e;",
											"    }        ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"property_types\",\n        \"attributes\": {\n\t\t\t\"name\": \"myprop\",\n            \"params\": {\n               \"type\": \"string\",\n               \"enum\": [\n                  \"A\",\n                  \"B\",\n                  \"C\"\n              ]\n            }\n        }\n    }\n}",
									"options": {}
								},
								"url": {
									"raw": "{{be4Url}}/model/property_types",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"property_types"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET single property",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1c97b70-e721-47f2-b108-2567963d3668",
										"exec": [
											"if (responseCode.code === 200) {",
											"    tests[\"Status equals 200\"] = true;",
											"} else if (responseCode.code === 404) {",
											"    tests[\"Status code is 404\"] = true;",
											"}",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/property_types/{{propertyTypeId}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"property_types",
										"{{propertyTypeId}}"
									]
								},
								"description": "GET object_type by object_type_id"
							},
							"response": []
						},
						{
							"name": "GET property types",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/property_types",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"property_types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify property type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71d78e8c-083a-48b9-b790-cd6422bdd008",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"{{propertyTypeId}}\",\n        \"type\": \"property_types\",\n        \"attributes\": {\n            \"params\": {\n               \"type\": \"string\",\n               \"enum\": [\n                  \"E\",\n                  \"F\",\n                  \"G\"\n              ]\n            }\n        }\n    }\n}",
									"options": {}
								},
								"url": {
									"raw": "{{be4Url}}/model/property_types/{{propertyTypeId}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"property_types",
										"{{propertyTypeId}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "3.3 Properties",
					"item": [
						{
							"name": "Create property",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
											"if (responseCode.code === 201) {",
											"    try {",
											"        var responseJSON = JSON.parse(responseBody);",
											"        if (responseJSON && responseJSON.data && responseJSON.data.id) {",
											"            postman.setEnvironmentVariable(\"propertyId\", responseJSON.data.id);",
											"        }",
											"    } catch (e) {",
											"        tests[\"Error in parsing response\"] = e;",
											"    }        ",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"properties\",\n        \"attributes\": {\n\t\t\t\"name\":\"nickname\",\n\t\t\t\"description\":\"Profile nickname\",\n\t\t\t\"property_type_name\":\"string\",\n\t\t\t\"object_type_name\":\"profiles\"\n        }\n    }\n}",
									"options": {}
								},
								"url": {
									"raw": "{{be4Url}}/model/properties",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"properties"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET single property",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if (responseCode.code === 200) {",
											"    tests[\"Status equals 200\"] = true;",
											"} else if (responseCode.code === 404) {",
											"    tests[\"Status code is 404\"] = true;",
											"}",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/properties/{{propertyId}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"properties",
										"{{propertyId}}"
									]
								},
								"description": "GET object_type by object_type_id"
							},
							"response": []
						},
						{
							"name": "GET properties",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/properties",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"properties"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET properties + filters",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/properties?filter[object_type]=profiles&filter[type]=dynamic",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"properties"
									],
									"query": [
										{
											"key": "filter[object_type]",
											"value": "profiles"
										},
										{
											"key": "filter[type]",
											"value": "dynamic"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify property",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"{{propertyId}}\",\n        \"type\": \"properties\",\n        \"attributes\": {\n\t\t\t\"name\":\"nickname\",\n            \"description\": \"This is a new description\"\n        }\n    }\n}",
									"options": {}
								},
								"url": {
									"raw": "{{be4Url}}/model/properties/{{propertyId}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"properties",
										"{{propertyId}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "3.4 Relations",
					"item": [
						{
							"name": "GET relations",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/relations",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"relations"
									]
								},
								"description": "GET relations"
							},
							"response": []
						},
						{
							"name": "Create relation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON;",
											"try {",
											"    responseJSON = JSON.parse(responseBody); ",
											"    tests[\"Status code is 201\"] = responseCode.code === 201;",
											"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
											"    if (responseCode.code === 201) {",
											"        if (responseJSON.data) {",
											"            if (responseJSON.data.id) {",
											"                postman.setEnvironmentVariable(\"relationId\", responseJSON.data.id);",
											"            }",
											"            if (responseJSON.data.name) {",
											"                postman.setEnvironmentVariable(\"relationName\", responseJSON.data.attributes.name);",
											"            }",
											"            if (responseJSON.data.inverse_name) {",
											"                postman.setEnvironmentVariable(\"inverseRelationName\", responseJSON.data.attributes.inverse_name);",
											"            }",
											"        }",
											"    }",
											"} catch (e) {",
											"    tests[\"Error in parsing response\"] = e;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"relations\",\n        \"attributes\": {\n            \"name\": \"owner_of\",\n            \"label\": \"Owner of\",\n            \"inverse_name\": \"belongs_to\",\n            \"inverse_label\": \"Belongs to\",\n            \"description\": \"Cat owner relation\",\n            \"params\": {\n            }\n        }\n    }\n}",
									"options": {}
								},
								"url": {
									"raw": "{{be4Url}}/model/relations",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"relations"
									]
								},
								"description": "POST ADD relation"
							},
							"response": []
						},
						{
							"name": "GET single relation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/relations/{{relationId}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"relations",
										"{{relationId}}"
									]
								},
								"description": "GET single relation by relation id"
							},
							"response": []
						},
						{
							"name": "Modify relation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON;",
											"try {",
											"    responseJSON = JSON.parse(responseBody); ",
											"    tests[\"Status code is 200\"] = responseCode.code === 200;",
											"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
											"    if (responseCode.code === 201 && responseJSON.data && responseJSON.data.id) {",
											"        postman.setEnvironmentVariable(\"relationId\", responseJSON.data.id);",
											"    }",
											"} catch (e) {",
											"    tests[\"Error in parsing response\"] = e;",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n    \t\"id\": \"{{relationId}}\",\n        \"type\": \"relations\",\n        \"attributes\": {\n            \"label\": \"Shared with\"\n        }\n    }\n}",
									"options": {}
								},
								"url": {
									"raw": "{{be4Url}}/model/relations/{{relationId}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"relations",
										"{{relationId}}"
									]
								},
								"description": "PATCH relation"
							},
							"response": []
						},
						{
							"name": "Add object types on left side of relation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n\t    {\n\t        \"type\": \"object_types\",\n\t\t    \"id\": \"3\"\n\t    },\n\t    {\n\t        \"type\": \"object_types\",\n\t\t    \"id\": \"2\"\n\t    }\n\t]\n}",
									"options": {}
								},
								"url": {
									"raw": "{{be4Url}}/model/relations/{{relationId}}/relationships/left_object_types",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"relations",
										"{{relationId}}",
										"relationships",
										"left_object_types"
									]
								},
								"description": "Add a list of object types on left side of relation"
							},
							"response": []
						},
						{
							"name": "GET left object types of relation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/relations/{{relationId}}/left_object_types",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"relations",
										"{{relationId}}",
										"left_object_types"
									]
								},
								"description": "GET object types on the left of relation"
							},
							"response": []
						},
						{
							"name": "Add an object type on right side of relation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"object_types\",\n\t    \"id\": \"3\"\n    }\n}",
									"options": {}
								},
								"url": {
									"raw": "{{be4Url}}/model/relations/{{relationId}}/relationships/right_object_types",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"relations",
										"{{relationId}}",
										"relationships",
										"right_object_types"
									]
								},
								"description": "Add one object type on right side of relation"
							},
							"response": []
						},
						{
							"name": "GET right object types of relation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/relations/{{relationId}}/right_object_types",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"relations",
										"{{relationId}}",
										"right_object_types"
									]
								},
								"description": "GET object types on the right of relation"
							},
							"response": []
						},
						{
							"name": "Replace object types on right side",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n    \t{\n        \t\"type\": \"object_types\",\n\t    \t\"id\": \"{{objectTypeId}}\"\n    \t}\n    ]\n}",
									"options": {}
								},
								"url": {
									"raw": "{{be4Url}}/model/relations/{{relationId}}/relationships/right_object_types",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"relations",
										"{{relationId}}",
										"relationships",
										"right_object_types"
									]
								},
								"description": "Replace object types on left side of relation"
							},
							"response": []
						}
					],
					"description": "relations endpoint",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "3.5 Schema",
					"item": [
						{
							"name": "GET object_type schema",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if (responseCode.code === 200) {",
											"    tests[\"Status equals 200\"] = true;",
											"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/schema+json';",
											"} else if (responseCode.code === 404) {",
											"    tests[\"Status code is 404\"] = true;",
											"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/schema+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/schema/{{objectTypeName}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"schema",
										"{{objectTypeName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET resource schema (roles)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if (responseCode.code === 200) {",
											"    tests[\"Status equals 200\"] = true;",
											"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/schema+json';",
											"} else if (responseCode.code === 404) {",
											"    tests[\"Status code is 404\"] = true;",
											"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/schema+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/schema/roles",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"schema",
										"roles"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "3.6 Categories",
					"item": [
						{
							"name": "Create category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ab287fef-941e-4601-a751-a68e1c38c8f6",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
											"if (responseCode.code === 201) {",
											"    try {",
											"        var responseJSON = JSON.parse(responseBody);",
											"        if (responseJSON && responseJSON.data && responseJSON.data.id) {",
											"            postman.setEnvironmentVariable(\"propertyTypeId\", responseJSON.data.id);",
											"        }",
											"    } catch (e) {",
											"        tests[\"Error in parsing response\"] = e;",
											"    }        ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"categories\",\n        \"attributes\": {\n        }\n    }\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{be4Url}}/model/categories",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET single category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1c97b70-e721-47f2-b108-2567963d3668",
										"exec": [
											"if (responseCode.code === 200) {",
											"    tests[\"Status equals 200\"] = true;",
											"} else if (responseCode.code === 404) {",
											"    tests[\"Status code is 404\"] = true;",
											"}",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/categories/{{categoryId}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"categories",
										"{{categoryId}}"
									]
								},
								"description": "GET object_type by object_type_id"
							},
							"response": []
						},
						{
							"name": "GET categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aac6008c-5b39-4e1f-8004-633204a04f32",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/categories",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET categories by type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "55b0016a-65da-4a95-8487-f01e6169c8ec",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/categories?filter[type]={{objectTypeName}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"categories"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "{{objectTypeName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71d78e8c-083a-48b9-b790-cd6422bdd008",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"{{categoryId}}\",\n        \"type\": \"categories\",\n        \"attributes\": {\n            \"label\": \"nice category!\"\n        }\n    }\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{be4Url}}/model/categories/{{categoryId}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"categories",
										"{{categoryId}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8baa33ce-e05a-476b-92b2-8dc98df76f81",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5ed9c6c4-d61f-40ff-8830-0a27dbbf6593",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "3.7 Tags",
					"item": [
						{
							"name": "Create category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ab287fef-941e-4601-a751-a68e1c38c8f6",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
											"if (responseCode.code === 201) {",
											"    try {",
											"        var responseJSON = JSON.parse(responseBody);",
											"        if (responseJSON && responseJSON.data && responseJSON.data.id) {",
											"            postman.setEnvironmentVariable(\"propertyTypeId\", responseJSON.data.id);",
											"        }",
											"    } catch (e) {",
											"        tests[\"Error in parsing response\"] = e;",
											"    }        ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"categories\",\n        \"attributes\": {\n        }\n    }\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{be4Url}}/model/categories",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET single category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1c97b70-e721-47f2-b108-2567963d3668",
										"exec": [
											"if (responseCode.code === 200) {",
											"    tests[\"Status equals 200\"] = true;",
											"} else if (responseCode.code === 404) {",
											"    tests[\"Status code is 404\"] = true;",
											"}",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/categories/{{categoryId}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"categories",
										"{{categoryId}}"
									]
								},
								"description": "GET object_type by object_type_id"
							},
							"response": []
						},
						{
							"name": "GET tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aac6008c-5b39-4e1f-8004-633204a04f32",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/model/tags",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"tags"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71d78e8c-083a-48b9-b790-cd6422bdd008",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"{{categoryId}}\",\n        \"type\": \"categories\",\n        \"attributes\": {\n            \"label\": \"nice category!\"\n        }\n    }\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{be4Url}}/model/categories/{{categoryId}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"model",
										"categories",
										"{{categoryId}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8baa33ce-e05a-476b-92b2-8dc98df76f81",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5ed9c6c4-d61f-40ff-8830-0a27dbbf6593",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "4. Objects",
			"item": [
				{
					"name": "GET objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/objects",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"objects"
							]
						},
						"description": "Get objects list"
					},
					"response": []
				},
				{
					"name": "Create object",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8445d955-52c8-4130-8537-b72c48d50d77",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 201\"] = responseCode.code === 201;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"objectId\", responseJSON.data.id);",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"{{objectTypeName}}\",\n        \"attributes\": {\n            \"description\": \"a cat\"\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{be4Url}}/{{objectTypeName}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"{{objectTypeName}}"
							]
						},
						"description": "Create new Object"
					},
					"response": []
				},
				{
					"name": "GET single object",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Status equals 200\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} else if (responseCode.code === 404) {",
									"    tests[\"Status code is 404\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/{{objectTypeName}}/{{objectId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"{{objectTypeName}}",
								"{{objectId}}"
							]
						},
						"description": "get single object by id"
					},
					"response": []
				},
				{
					"name": "Modify object",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2890942-7778-4906-8020-33d8d52c2c90",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{objectId}}\",\n        \"type\": \"{{objectTypeName}}\",\n        \"attributes\": {\n            \"description\": \"Superdummy\"\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{be4Url}}/{{objectTypeName}}/{{objectId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"{{objectTypeName}}",
								"{{objectId}}"
							]
						},
						"description": "PATCH object"
					},
					"response": []
				},
				{
					"name": "Create object relation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": [\n    \t{\n        \t\"type\": \"{{objectTypeName}}\",\n        \t\"id\": \"{{objectId}}\"\n    \t}\n    ]\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/users/1/relationships/{{relationName}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"users",
								"1",
								"relationships",
								"{{relationName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET objects type filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/objects?filter[type]=documents",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"objects"
							],
							"query": [
								{
									"key": "filter[type]",
									"value": "documents"
								}
							]
						},
						"description": "Get objects list"
					},
					"response": []
				},
				{
					"name": "GET related objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/{{objectTypeName}}/{{objectId}}/{{inverseRelationName}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"{{objectTypeName}}",
								"{{objectId}}",
								"{{inverseRelationName}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "objects endpoint: Object management",
			"protocolProfileBehavior": {}
		},
		{
			"name": "5. Users & Roles",
			"item": [
				{
					"name": "GET users",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/users/",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"users",
								""
							]
						},
						"description": "Get users list"
					},
					"response": []
				},
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 201\"] = responseCode.code === 201;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"userId\", responseJSON.data.id);",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"users\",\n        \"attributes\": {\n            \"username\": \"johndoe\",\n            \"password\": \"j04nd0e\",\n            \"uname\": \"johndoe\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/users",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Create new User"
					},
					"response": []
				},
				{
					"name": "GET single user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Status equals 200\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} else if (responseCode.code === 404) {",
									"    tests[\"Status code is 404\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/users/{{userId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "get single user by id"
					},
					"response": []
				},
				{
					"name": "Patch user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{userId}}\",\n        \"type\": \"users\",\n        \"attributes\": {\n            \"name\": \"John\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/users/{{userId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "PATCH user"
					},
					"response": []
				},
				{
					"name": "GET roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/roles/",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"roles",
								""
							]
						},
						"description": "Get roles list"
					},
					"response": []
				},
				{
					"name": "Create role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 201\"] = responseCode.code === 201;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    if (responseCode.code === 201 && responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"roleId\", responseJSON.data.id);",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"roles\",\n        \"attributes\": {\n            \"name\": \"animal\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/roles",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"roles"
							]
						},
						"description": "Create new Role"
					},
					"response": []
				},
				{
					"name": "GET single role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Status equals 200\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} else if (responseCode.code === 404) {",
									"    tests[\"Status code is 404\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/roles/{{roleId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"roles",
								"{{roleId}}"
							]
						},
						"description": "get single role by id"
					},
					"response": []
				},
				{
					"name": "Modify role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{roleId}}\",\n        \"type\": \"roles\",\n        \"attributes\": {\n        \t\"name\": \"animal\",\n            \"description\": \"a very important description of this role\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/roles/{{roleId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"roles",
								"{{roleId}}"
							]
						},
						"description": "PATCH role"
					},
					"response": []
				},
				{
					"name": "Add role to user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"roles\",\n\t    \"id\": \"{{roleId}}\"\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/users/{{userId}}/relationships/roles",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"relationships",
								"roles"
							]
						},
						"description": "Add a role to user"
					},
					"response": []
				},
				{
					"name": "GET user roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/users/{{userId}}/roles",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"roles"
							]
						},
						"description": "Get user roles"
					},
					"response": []
				},
				{
					"name": "Add user to role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body is empty\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"users\",\n\t    \"id\": \"{{userId}}\"\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/roles/{{roleId}}/relationships/users",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"roles",
								"{{roleId}}",
								"relationships",
								"users"
							]
						},
						"description": "Add a user to a role"
					},
					"response": []
				},
				{
					"name": "GET role users",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/roles/{{roleId}}/users",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"roles",
								"{{roleId}}",
								"users"
							]
						},
						"description": "Get role users"
					},
					"response": []
				},
				{
					"name": "Remove associated role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"roles\",\n\t    \"id\": \"{{roleId}}\"\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/users/{{userId}}/relationships/roles",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"relationships",
								"roles"
							]
						},
						"description": "Remove a user's role"
					},
					"response": []
				}
			],
			"description": "Roles management",
			"protocolProfileBehavior": {}
		},
		{
			"name": "6. Streams & Images",
			"item": [
				{
					"name": "Upload file and create stream",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//tests[\"Status code is 201\"] = responseCode.code === 201;",
									"//tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"try {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"streamUuid\", responseJSON.data.id);        ",
									"    }",
									"} catch (e) {",
									"    //tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "image/png"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": ""
							},
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/streams/upload/myfile.jpg",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"streams",
								"upload",
								"myfile.jpg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create remote stream",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//tests[\"Status code is 201\"] = responseCode.code === 201;",
									"//tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"try {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"streamUuid\", responseJSON.data.id);        ",
									"    }",
									"} catch (e) {",
									"    //tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "image/png"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": ""
							},
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/streams/upload/myfile.jpg",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"streams",
								"upload",
								"myfile.jpg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get stream",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/streams/{{streamUuid}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"streams",
								"{{streamUuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create image",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0a620dc-637c-4c41-bbe8-bc149e5e396e",
								"exec": [
									"//tests[\"Status code is 201\"] = responseCode.code === 201;",
									"//tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"try {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"imageId\", responseJSON.data.id);        ",
									"    }",
									"} catch (e) {",
									"//    tests[\"Error in parsing response\"] = e;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"type\": \"images\",\n\t\t\"attributes\": {\n\t\t\t\"title\": \"My media\"\n\t\t}\n\t}\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/images",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "Link stream to media",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"id\": \"{{imageId}}\",\n\t\t\"type\": \"images\"\n\t}\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/streams/{{streamUuid}}/relationships/object",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"streams",
								"{{streamUuid}}",
								"relationships",
								"object"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single image",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac54c53b-661e-4d7b-89c5-eb5683c9f499",
								"exec": [
									"//tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/images/{{imageId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"images",
								"{{imageId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get images",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e06fe2e8-8046-4560-a3b5-52dc45d5f9ff",
								"exec": [
									"//tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/images",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get media",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d02291db-7966-4d1f-8852-44a3d7b9a8b9",
								"exec": [
									"//tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/media",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"media"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get media thumbs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d02291db-7966-4d1f-8852-44a3d7b9a8b9",
								"exec": [
									"//tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/media/thumbs?ids={{imageId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"media",
								"thumbs"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{imageId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload file and create image",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6866b5af-35b7-40f1-9e74-156a7fed59db",
								"exec": [
									"//tests[\"Status code is 201\"] = responseCode.code === 201;",
									"//tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"try {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"streamUuid\", responseJSON.data.id);        ",
									"    }",
									"} catch (e) {",
									"    //tests[\"Error in parsing response\"] = e;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "image/png"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "file",
							"file": {},
							"options": {
								"file": {}
							}
						},
						"url": {
							"raw": "{{be4Url}}/images/upload/other-file.jpg",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"images",
								"upload",
								"other-file.jpg"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "7. Folders",
			"item": [
				{
					"name": "Trees",
					"item": [
						{
							"name": "Get path on trees",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d4ec4dc4-de0c-408b-be3f-1f2b72133891",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}"
									},
									{
										"key": "X-Api-Key",
										"value": "{{apiKey}}"
									}
								],
								"url": {
									"raw": "{{be4Url}}/trees/{{rootFolderId}}/{{subFolderId}}/{{objectId}}",
									"host": [
										"{{be4Url}}"
									],
									"path": [
										"trees",
										"{{rootFolderId}}",
										"{{subFolderId}}",
										"{{objectId}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create root folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"try {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"rootFolderId\", responseJSON.data.id);        ",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"folders\",\n        \"attributes\": {\n        \t\"title\": \"Root Folder\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/folders",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"folders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all folders",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/folders",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"folders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/folders/{{rootFolderId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"folders",
								"{{rootFolderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get root folders",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/folders?filter[roots]",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"folders"
							],
							"query": [
								{
									"key": "filter[roots]",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create sub folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"try {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"subFolderId\", responseJSON.data.id);        ",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"folders\",\n        \"attributes\": {\n        \t\"title\": \"Sub Folder\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/folders",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"folders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set parent folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"folders\",\n        \"id\": \"{{rootFolderId}}\"\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/folders/{{subFolderId}}/relationships/parent",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"folders",
								"{{subFolderId}}",
								"relationships",
								"parent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get parent folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/folders/{{subFolderId}}/parent",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"folders",
								"{{subFolderId}}",
								"parent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add folder children (root folder)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7255b36f-4882-4faf-8453-3ecfbdcef08e",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": [\n    \t{\n\t        \"type\": \"{{objectTypeName}}\",\n\t        \"id\": \"{{objectId}}\"\n    \t}\n    ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{be4Url}}/folders/{{rootFolderId}}/relationships/children",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"folders",
								"{{rootFolderId}}",
								"relationships",
								"children"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get folder children",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65e8e2ee-fc26-4655-8a8f-9fca3c28a179",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/folders/{{rootFolderId}}/children",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"folders",
								"{{rootFolderId}}",
								"children"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change children positions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a1e3247-751a-4ceb-8958-e02956f0b8ce",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": [\n    \t{\n\t        \"type\": \"folders\",\n\t        \"id\": \"{{subFolderId}}\",\n\t        \"meta\": {\n\t        \t\"relation\": {\n\t        \t\t\"position\":2\n\t        \t}\n\t        }\n    \t},\n    \t{\n\t        \"type\": \"{{objectTypeName}}\",\n\t        \"id\": \"{{objectId}}\",\n\t        \"meta\": {\n\t        \t\"relation\": {\n\t        \t\t\"position\":1\n\t        \t}\n\t        }\n    \t}\n    ]\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{be4Url}}/folders/{{rootFolderId}}/relationships/children",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"folders",
								"{{rootFolderId}}",
								"relationships",
								"children"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change children canonical & menu flag",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a44f04e-e82d-4249-bc21-05d9b37a6d53",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": [\n    \t{\n\t        \"type\": \"{{objectTypeName}}\",\n\t        \"id\": \"{{objectId}}\",\n\t        \"meta\": {\n\t        \t\"relation\": {\n\t        \t\t\"canonical\": true,\n\t\t\t\t\t\"menu\": false\n\t        \t}\n\t        }\n    \t}\n    ]\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{be4Url}}/folders/{{rootFolderId}}/relationships/children",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"folders",
								"{{rootFolderId}}",
								"relationships",
								"children"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove folder children",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": [\n    \t{\n\t        \"type\": \"{{objectTypeName}}\",\n\t        \"id\": \"{{objectId}}\"\n    \t}\n    ]\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/folders/{{subFolderId}}/relationships/children",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"folders",
								"{{subFolderId}}",
								"relationships",
								"children"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get objects with parent folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/objects?filter[parent]={{subFolderId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"objects"
							],
							"query": [
								{
									"key": "filter[parent]",
									"value": "{{subFolderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get folders with ancestor folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/folders?filter[parent]={{rootFolderId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"folders"
							],
							"query": [
								{
									"key": "filter[parent]",
									"value": "{{rootFolderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete sub folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/objects/{{subFolderId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"objects",
								"{{subFolderId}}"
							]
						},
						"description": "DEL object"
					},
					"response": []
				},
				{
					"name": "Delete root folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/objects/{{rootFolderId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"objects",
								"{{rootFolderId}}"
							]
						},
						"description": "DEL object"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "8. Translations",
			"item": [
				{
					"name": "GET translations",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"translationId\", responseJSON.data.id);",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/translations/",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"translations",
								""
							]
						},
						"description": "Get translations list"
					},
					"response": []
				},
				{
					"name": "GET single translation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/translations/{{translationId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"translations",
								"{{translationId}}"
							]
						},
						"description": "Get a single translation by ID"
					},
					"response": []
				},
				{
					"name": "GET single translation object (the master object)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/translations/{{translationId}}/object",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"translations",
								"{{translationId}}",
								"object"
							]
						},
						"description": "Get a single translation main object, by translation ID"
					},
					"response": []
				},
				{
					"name": "GET single translation relationship object",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/translations/{{translationId}}/relationships/object",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"translations",
								"{{translationId}}",
								"relationships",
								"object"
							]
						},
						"description": "Get a single translation main object, by translation ID"
					},
					"response": []
				},
				{
					"name": "Create a translation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 201\"] = responseCode.code === 201;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"translationId\", responseJSON.data.id);",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"translations\",\n        \"attributes\": {\n\t\t\t\"object_id\": \"{{objectId}}\",\n\t\t\t\"status\": \"draft\",\n            \"lang\": \"sp\",\n            \"translated_fields\": {\n                \"title\": \"título uno\",\n                \"description\": \"descripción uno\"\n            }\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/translations",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"translations"
							]
						},
						"description": "Translation of specified fields, in a specific language, for an object."
					},
					"response": []
				},
				{
					"name": "Modify a translation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{translationId}}\",\n        \"type\": \"translations\",\n        \"attributes\": {\n            \"translated_fields\": {\n                \"title\": \"nuevo título\",\n                \"description\": \"nueva descripción\"\n            }\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/translations/{{translationId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"translations",
								"{{translationId}}"
							]
						},
						"description": "PATCH translation"
					},
					"response": []
				},
				{
					"name": "Delete a translation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/translations/{{translationId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"translations",
								"{{translationId}}"
							]
						},
						"description": "DEL translation"
					},
					"response": []
				},
				{
					"name": "Delete a translation permanently",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/trash/{{translationId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"trash",
								"{{translationId}}"
							]
						},
						"description": "DEL translation"
					},
					"response": []
				}
			],
			"description": "Translations endpoint: i18n management (add, remove, modify a translation).",
			"protocolProfileBehavior": {}
		},
		{
			"name": "9. Annotations",
			"item": [
				{
					"name": "GET annotations",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d50451a-464c-4ba1-81b2-894a5b04c3e6",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"annotationId\", responseJSON.data.id);",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/annotations/",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"annotations",
								""
							]
						},
						"description": "Get annotations list"
					},
					"response": []
				},
				{
					"name": "GET single annotation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/annotation/{{annotationId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"annotation",
								"{{annotationId}}"
							]
						},
						"description": "Get a single annotation by ID"
					},
					"response": []
				},
				{
					"name": "Create an annotation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f046b58-ab60-44f1-abb7-21983b64455a",
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 201\"] = responseCode.code === 201;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"annotationId\", responseJSON.data.id);",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"annotations\",\n        \"attributes\": {\n\t\t\t\"object_id\": \"{{objectId}}\",\n\t\t\t\"description\": \"a note\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/annotations",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"annotations"
							]
						},
						"description": "Create an annotation for an object."
					},
					"response": []
				},
				{
					"name": "Modify an annotation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{annotationId}}\",\n        \"type\": \"annotations\",\n        \"attributes\": {\n            \"description\": \"another note\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/annotations/{{annotationId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"annotations",
								"{{annotationId}}"
							]
						},
						"description": "PATCH annotation"
					},
					"response": []
				},
				{
					"name": "Delete an annotation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/annotations/{{annotationId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"annotations",
								"{{annotationId}}"
							]
						},
						"description": "DEL annotation"
					},
					"response": []
				},
				{
					"name": "Delete an annotation permanently",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/trash/{{annotationId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"trash",
								"{{annotationId}}"
							]
						},
						"description": "DEL annotation"
					},
					"response": []
				}
			],
			"description": "Translations endpoint: i18n management (add, remove, modify a translation).",
			"protocolProfileBehavior": {}
		},
		{
			"name": "10. Trash",
			"item": [
				{
					"name": "GET objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/trash/",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"trash",
								""
							]
						},
						"description": "Get objects from trash"
					},
					"response": []
				},
				{
					"name": "Delete object",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a211ad2e-d68d-45ce-ad14-cf5d4ffc1c53",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/trash/{{objectId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"trash",
								"{{objectId}}"
							]
						},
						"description": "DEL object"
					},
					"response": []
				},
				{
					"name": "GET single object",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Status equals 200\"] = true;",
									"} else if (responseCode.code === 404) {",
									"    tests[\"Status code is 404\"] = true;",
									"}",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/trash/{{objectId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"trash",
								"{{objectId}}"
							]
						},
						"description": "get single object from trash by id"
					},
					"response": []
				},
				{
					"name": "Restore object",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{objectId}}\",\n        \"type\": \"objects\"\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/trash/{{objectId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"trash",
								"{{objectId}}"
							]
						},
						"description": "PATCH restore object"
					},
					"response": []
				}
			],
			"description": "Trash management",
			"protocolProfileBehavior": {}
		},
		{
			"name": "11. Admin",
			"item": [
				{
					"name": "Create application",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 201\"] = responseCode.code === 201;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"adminResourceId\", responseJSON.data.id);",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"applications\",\n        \"attributes\": {\n            \"name\": \"my-very-first-app\",\n            \"description\": \"My first app\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/admin/applications",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET single application",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Status equals 200\"] = true;",
									"} else if (responseCode.code === 404) {",
									"    tests[\"Status code is 404\"] = true;",
									"}",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/admin/applications/{{adminResourceId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"applications",
								"{{adminResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/admin/applications",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify application",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{adminResourceId}}\",\n        \"type\": \"applications\",\n        \"attributes\": {\n            \"name\": \"new-app-name\",\n            \"description\": \"New application description\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/admin/applications/{{adminResourceId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"applications",
								"{{adminResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete application",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";",
									"postman.setEnvironmentVariable(\"adminResourceId\",\"\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/admin/applications/{{adminResourceId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"applications",
								"{{adminResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create async job",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"try {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"adminResourceId\", responseJSON.data.id);",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"async_jobs\",\n        \"attributes\": {\n            \"service\": \"dummy\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/admin/async_jobs",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"async_jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET single job",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Status equals 200\"] = true;",
									"} else if (responseCode.code === 404) {",
									"    tests[\"Status code is 404\"] = true;",
									"}",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/admin/async_jobs/{{adminResourceId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"async_jobs",
								"{{adminResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET async jobs list",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/admin/async_jobs",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"async_jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify async job",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{adminResourceId}}\",\n        \"type\": \"async_jobs\",\n        \"attributes\": {\n            \"priority\": 2\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/admin/async_jobs/{{adminResourceId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"async_jobs",
								"{{adminResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete async job",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";",
									"postman.setEnvironmentVariable(\"jobId\", \"\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/admin/async_jobs/{{adminResourceId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"async_jobs",
								"{{adminResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create config",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"try {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"adminResourceId\", responseJSON.data.id);",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n    \t\"id\": \"TestConf\",\n        \"type\": \"config\",\n        \"attributes\": {\n\t\t\t\"name\": \"TestConf\",\n            \"content\": \"config content\",\n            \"context\": \"config-context\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/admin/config",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"config"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET single config",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Status equals 200\"] = true;",
									"} else if (responseCode.code === 404) {",
									"    tests[\"Status code is 404\"] = true;",
									"}",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/admin/config/{{adminResourceId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"config",
								"{{adminResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET config list",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/admin/config",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"config"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify config",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{adminResourceId}}\",\n        \"type\": \"config\",\n        \"attributes\": {\n            \"context\": \"another-context\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/admin/config/{{adminResourceId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"config",
								"{{adminResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete config",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";",
									"postman.setEnvironmentVariable(\"adminResourceId\", \"\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/admin/config/{{adminResourceId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"config",
								"{{adminResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"try {",
									"    var responseJSON = JSON.parse(responseBody); ",
									"    if (responseJSON && responseJSON.data && responseJSON.data.id) {",
									"        postman.setEnvironmentVariable(\"adminResourceId\", responseJSON.data.id);",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"endpoints\",\n        \"attributes\": {\n            \"name\": \"my_endpoint\",\n            \"description\": \"My first endpoint\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/admin/endpoints",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"endpoints"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET single endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Status equals 200\"] = true;",
									"} else if (responseCode.code === 404) {",
									"    tests[\"Status code is 404\"] = true;",
									"}",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/admin/endpoints/{{adminResourceId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"endpoints",
								"{{adminResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET endpoints",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/admin/endpoints",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"endpoints"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{adminResourceId}}\",\n        \"type\": \"endpoints\",\n        \"attributes\": {\n            \"description\": \"New endpoint description\"\n        }\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/admin/endpoints/{{adminResourceId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"endpoints",
								"{{adminResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";",
									"postman.setEnvironmentVariable(\"adminResourceId\", \"\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/admin/endpoints/{{adminResourceId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"admin",
								"endpoints",
								"{{adminResourceId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "12. History",
			"item": [
				{
					"name": "GET object history",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d3edc05-76cb-496c-80d8-bfc20c657043",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Status equals 200\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} else if (responseCode.code === 404) {",
									"    tests[\"Status code is 404\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/history?filter[resource_id]={{objectId}}&filter[resource_type]=objects",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"history"
							],
							"query": [
								{
									"key": "filter[resource_id]",
									"value": "{{objectId}}"
								},
								{
									"key": "filter[resource_type]",
									"value": "objects"
								}
							]
						},
						"description": "get single object by id"
					},
					"response": []
				},
				{
					"name": "GET user activity history",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d3edc05-76cb-496c-80d8-bfc20c657043",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Status equals 200\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} else if (responseCode.code === 404) {",
									"    tests[\"Status code is 404\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/history?filter[user_id]={{userId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"history"
							],
							"query": [
								{
									"key": "filter[user_id]",
									"value": "{{userId}}"
								}
							]
						},
						"description": "get single object by id"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "13. Categories & Tags",
			"item": [
				{
					"name": "GET objects + categories/tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d3edc05-76cb-496c-80d8-bfc20c657043",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Status equals 200\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} else if (responseCode.code === 404) {",
									"    tests[\"Status code is 404\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/{{objectTypeName}}?fields=tags,categories",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"{{objectTypeName}}"
							],
							"query": [
								{
									"key": "fields",
									"value": "tags,categories"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET objects + categories filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d3edc05-76cb-496c-80d8-bfc20c657043",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Status equals 200\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} else if (responseCode.code === 404) {",
									"    tests[\"Status code is 404\"] = true;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{be4Url}}/history?filter[user_id]={{userId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"history"
							],
							"query": [
								{
									"key": "filter[user_id]",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify object tags/categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2890942-7778-4906-8020-33d8d52c2c90",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{objectId}}\",\n        \"type\": \"{{objectTypeName}}\",\n        \"attributes\": {\n            \"categories\": [\n            \t{\n            \t\t\"name\": \"profile-2\"\n            \t}\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{be4Url}}/{{objectTypeName}}/{{objectId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"{{objectTypeName}}",
								"{{objectId}}"
							]
						},
						"description": "PATCH object"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "14. Remove All",
			"item": [
				{
					"name": "Remove sub folder permanently",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/trash/{{subFolderId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"trash",
								"{{subFolderId}}"
							]
						},
						"description": "DEL object"
					},
					"response": []
				},
				{
					"name": "Remove root folder permanently",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/trash/{{rootFolderId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"trash",
								"{{rootFolderId}}"
							]
						},
						"description": "DEL object"
					},
					"response": []
				},
				{
					"name": "Delete role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";",
									"postman.setEnvironmentVariable(\"roleId\", \"\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/roles/{{roleId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"roles",
								"{{roleId}}"
							]
						},
						"description": "DEL role"
					},
					"response": []
				},
				{
					"name": "Delete object relation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": [\n\t    {\n\t        \"type\": \"{{objectTypeName}}\",\n\t\t    \"id\": \"{{objectId}}\"\n\t    }\n    ] \n}",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/users/1/relationships/{{relationName}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"users",
								"1",
								"relationships",
								"{{relationName}}"
							]
						},
						"description": "DEL object"
					},
					"response": []
				},
				{
					"name": "Delete relation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";",
									"postman.setEnvironmentVariable(\"objectTypeId\", \"\");",
									"postman.setEnvironmentVariable(\"objectTypeName\", \"\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/model/relations/{{relationId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"model",
								"relations",
								"{{relationId}}"
							]
						},
						"description": "DELETE relation"
					},
					"response": []
				},
				{
					"name": "Delete object",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/objects/{{objectId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"objects",
								"{{objectId}}"
							]
						},
						"description": "DEL object"
					},
					"response": []
				},
				{
					"name": "Delete object permanently",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/trash/{{objectId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"trash",
								"{{objectId}}"
							]
						},
						"description": "DEL object"
					},
					"response": []
				},
				{
					"name": "Delete property",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";",
									"postman.setEnvironmentVariable(\"propertyId\", \"\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/model/properties/{{propertyId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"model",
								"properties",
								"{{propertyId}}"
							]
						},
						"description": "DEL object_type"
					},
					"response": []
				},
				{
					"name": "Delete property type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d89799aa-51e8-4e9b-a4be-491513dbb266",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";",
									"postman.setEnvironmentVariable(\"propertyId\", \"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/model/property_types/{{propertyTypeId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"model",
								"property_types",
								"{{propertyTypeId}}"
							]
						},
						"description": "DEL object_type"
					},
					"response": []
				},
				{
					"name": "Delete object_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";",
									"postman.setEnvironmentVariable(\"objectTypeId\", \"\")",
									"postman.setEnvironmentVariable(\"objectTypeName\", \"\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/model/object_types/{{objectTypeName}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"model",
								"object_types",
								"{{objectTypeName}}"
							]
						},
						"description": "DEL object_type"
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/users/{{userId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "DEL user"
					},
					"response": []
				},
				{
					"name": "Delete user permanently",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}"
							},
							{
								"key": "X-Api-Key",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{be4Url}}/trash/{{userId}}",
							"host": [
								"{{be4Url}}"
							],
							"path": [
								"trash",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Remove all objects and resources created",
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}
